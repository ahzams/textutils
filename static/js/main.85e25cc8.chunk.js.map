{"version":3,"sources":["components/Navbar.js","components/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","class","onClick","toggleMode","type","role","id","htmlFor","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","toLowerCase","navigator","clipboard","writeText","split","join","filter","element","defaultProps","homeText","aboutText","contactText","App","setMode","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","getElementById"],"mappings":"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","file":"static/js/main.85e25cc8.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n                    <div class={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                    </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string,\r\n    homeText: PropTypes.string\r\n}\r\n\r\n// Default Props\r\nNavbar.defaultProps = {\r\n    title: 'TextUtils',\r\n    homeText: 'Home',\r\n    aboutText: 'About',\r\n    contactText: 'Contact'\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function Textform (props) {\r\n\r\n    const handleUpClick = () => {\r\n        // console.log('Handle up clicked')\r\n        let newText = text.toUpperCase()\r\n        setText(newText)\r\n    }\r\n\r\n    const handleLowClick = () => {\r\n        // console.log('Handle up clicked')\r\n        let newText = text.toLowerCase()\r\n        setText(newText)\r\n    }\r\n\r\n    const handleClear = () => {\r\n        // console.log('Handle up clicked')\r\n        setText('')\r\n    }\r\n\r\n    const handleCopy = () => {\r\n       navigator.clipboard.writeText(text)\r\n    }\r\n\r\n    const handleExtra = () => {\r\n        let newText = text.split(/[ ]+/)\r\n        setText(newText.join(\" \"))\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        // console.log(text)\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const [text, setText] = useState(\"\");\r\n    \r\n    return (\r\n        <>\r\n            <div className='my-5' style={{color: props.mode==='dark'?'white':'black'}}>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"my-3\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#373b40':'white', color: props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1\" style={{backgroundColor: props.mode==='dark'?'black':'#0d6efd'}} onClick={handleUpClick}>Convert to Uppercase</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary my-1\" style={{backgroundColor: props.mode==='dark'?'black':'#0d6efd'}} onClick={handleLowClick}>Convert to Lowercase</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1\" style={{backgroundColor: props.mode==='dark'?'black':'#0d6efd'}} onClick={handleClear}>Clear Text</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1\" style={{backgroundColor: props.mode==='dark'?'black':'#0d6efd'}} onClick={handleCopy}>Copy Text</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary my-1\" style={{backgroundColor: props.mode==='dark'?'black':'#0d6efd'}} onClick={handleExtra}>Remove extra spaces</button>\r\n\r\n                <h1 className='my-4'>Your text summary : </h1>\r\n                {/* <p id='count'>{text?text.split(' ').filter(function(t) {return t!== ''}).length:0} Words & {text.length} Characters</p> */}\r\n                {/* <p>{text.match(/\\s+/g)?(text.match(/\\s+/g)).length : 0} Words & {text.length} Characters</p> */}\r\n                <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} Words & {text.length} Characters</p>\r\n                <h2 className='my-3'>Preview</h2>\r\n                <p>{text.length>0?text:\"Nothing to preview\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\nimport './App.css';\nimport Navbar from './components/Navbar'\nimport Textform from './components/Textform'\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode('dark')\n      document.body.style.backgroundColor = 'rgb(15,15,19)'\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n    }\n  }\n\n  return (\n    <>\n    \n        <Navbar mode={mode} toggleMode={toggleMode} />\n        <div className='container my-3'>\n            <Textform heading=\"Try TextUtils - Word Counter, Character Counter, Remove Extra Spaces\" mode={mode} />\n        </div>\n      \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}